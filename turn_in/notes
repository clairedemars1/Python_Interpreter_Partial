

todo:
- implement if, else (make sure the suite thing doesn't "return" an if suite
- make if x: work
- make the print(x) vs x = 3 vs x+=3 thing work 

todo longterm:

Notes:
	- I made NoneNode and UndefNode always return values, which they are not, b/c they can be returned from the symboltable to show that the val was not found (but we never check whether they are there)

/*
Double Dispatch
	If c++ allowed double dispatch, then we could have written 4 functions 
		FloatLiteral::operator+( IntLiteral)
		FloatLiteral::operator+( FloatLiteral)
		IntLiteral::operator+( IntLiteral)
		IntLiteral::operator+( FloatLiteral)
	Instead of the 6 functions we have
		FloatLiteral::operator+(Literal)
		FloatLiteral::opPlus(float)
		FloatLiteral::opPlus(int)
		IntLiteral::operator+(Literal)
		IntLiteral::opPlus(float)
		IntLiteral::opPlus(int)
	How many?
		let n = num of kinds of literal 
		With double dispatch: n*n
		Without double dispatch: n*(1+n)
	So it's not a big deal
*/
